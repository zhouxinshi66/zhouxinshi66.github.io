<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>thymleaf的基本语法</title>
      <link href="2021/04/24/Thymleaf%E7%9A%84%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/"/>
      <url>2021/04/24/Thymleaf%E7%9A%84%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<p><strong>简介：</strong></p><ul><li>Thymeleaf 是一个流行的模板引擎，该模板引擎采用 Java 语言开发。它对对网络环境不存在严格的要求，在非 Web 环境下，他能直接显示模板上的静态数据；在 Web 环境下，它能像 Jsp 一样从后台接收数据并替换掉模板上的静态数据。</li><li>它是基于 HTML 的，以 HTML 标签为载体，Thymeleaf 要寄托在 HTML 标签下实现。在过去的 Java Web 开发中，我们往往会选择使用 Jsp 去完成页面的动态渲染， 但是 jsp 需要翻译编译运行，效率低</li></ul><h2 id="thymleaf表达式："><a href="#thymleaf表达式：" class="headerlink" title="thymleaf表达式："></a>thymleaf表达式：</h2><p><strong>变量表达式</strong>：标准变量表达式用于访问容器（ tomcat）上下文环境中的变量，功能和 EL 中的 ${} 相同</p><ol><li>标准变量表达式：</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>展示 User 用户信息： <span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">用户编号： <span class="tag">&lt;<span class="name">span</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;user.id&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">用户姓名： <span class="tag">&lt;<span class="name">span</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;user.name&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">用户手机号： <span class="tag">&lt;<span class="name">span</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;user.phone&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">用户地址： <span class="tag">&lt;<span class="name">span</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;user.address&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br></pre></td></tr></table></figure><ol start="2"><li>选择变量表达式：</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">th:object</span>=<span class="string">&quot;$&#123;user&#125;&quot;</span>&gt;</span></span><br><span class="line">用户编号： <span class="tag">&lt;<span class="name">span</span> <span class="attr">th:text</span>=<span class="string">&quot;*&#123;id&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">用户姓名： <span class="tag">&lt;<span class="name">span</span> <span class="attr">th:text</span>=<span class="string">&quot;*&#123;name&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">用户手机号： <span class="tag">&lt;<span class="name">span</span> <span class="attr">th:text</span>=<span class="string">&quot;*&#123;phone&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">用户地址： <span class="tag">&lt;<span class="name">span</span> <span class="attr">th:text</span>=<span class="string">&quot;*&#123;address&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="3"><li>标准变量表达式和选择变量表达式：标准变量和选择变量表达式可以混合使用， 也可以不混合使用，使用 th:object 进行对象的选择， 也可以直接使用 *{…} 获取数据</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>=======标准变量表达式=======<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">用户编号： <span class="tag">&lt;<span class="name">span</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;user.id&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">用户姓名： <span class="tag">&lt;<span class="name">span</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;user.name&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">用户手机号： <span class="tag">&lt;<span class="name">span</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;user.phone&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">用户地址： <span class="tag">&lt;<span class="name">span</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;user.address&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>=======选择变量表达式=======<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">用户编号： *&#123;user.id&#125; ==&gt; <span class="tag">&lt;<span class="name">span</span> <span class="attr">th:text</span>=<span class="string">&quot;*&#123;user.id&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">用户姓名： *｛ user.name｝ ==&gt; <span class="tag">&lt;<span class="name">span</span> <span class="attr">th:text</span>=<span class="string">&quot;*&#123;user.name&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">用户手机号： *&#123;user.phone&#125; ==&gt; <span class="tag">&lt;<span class="name">span</span> <span class="attr">th:text</span>=<span class="string">&quot;*&#123;user.phone&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">用户地址： *&#123;user.address&#125; ==&gt; &lt;span</span><br><span class="line">th:text=&quot;*&#123;user.address&#125;&quot;&gt;<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br></pre></td></tr></table></figure><p><strong>URL表达式</strong>：<br> 1.无参的绝对路径：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>绝对路径（没有参数） <span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;http://localhost:8080/thymeleaf/info&#125;&quot;</span>&gt;</span>查看：绝对路径<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><p>  2.有参的绝对路径：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>绝对路径（路径中有参数） <span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;&#x27;http://localhost:8080/thymeleaf/user/info?id=&#x27; +</span></span></span><br><span class="line"><span class="tag"><span class="string">$&#123;user.id&#125;&#125;&quot;</span>&gt;</span>查看用户信息：绝对路径(带参数)<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><p>3.无参的相对路径：（开发推荐）</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/thymeleaf/info&#125;&quot;</span>&gt;</span>查看：相对路径<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><p>4.有参的相对路径：（开发推荐）</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;&#x27;/thymeleaf/user/info?id=&#x27; + $&#123;user.id&#125;&#125;&quot;</span>&gt;</span>查看用户信息：相</span><br><span class="line">对路径（带参数） <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><p>5.优雅的有参相对路径：（开发推荐，不用拼接字符串，减少出错）</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/thymeleaf/info(id=$&#123;user.id&#125;)&#125;&quot;</span>&gt;</span>推荐使用：优雅的带参数路径</span><br><span class="line">写法<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="循环遍历："><a href="#循环遍历：" class="headerlink" title="循环遍历："></a>循环遍历：</h2><p><strong>1遍历List集合：</strong></p><ul><li>user:当前对象的变量名，自定义</li><li>userStat:当前对象的状态变量名(可写可不写)</li><li>userList:循环遍历的集合</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">th:each</span>=<span class="string">&quot;user,userStat:$&#123;userList&#125;&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;userStat.index&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;user.id&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;user.name&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;user.phone&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;user.address&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>2.遍历Map集合</strong>：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">th:each</span>=<span class="string">&quot;userMap,userMapStat:$&#123;userMaps&#125;&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;userMapStat.count&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;userMap.key&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;userMap.value&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;userMap.value.id&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;userMap.value.name&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;userMap.value.phone&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;userMap.value.address&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>3.遍历Array数组：</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">th:each</span>=<span class="string">&quot;user,userStat:$&#123;userArray&#125;&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;userStat.count&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;user.id&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;user.name&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;user.phone&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;user.address&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>4.遍历复杂循环：</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">List&lt;Map&lt;Integer,List&lt;User&gt;&gt;&gt; myList = <span class="keyword">new</span> ArrayList&lt;Map&lt;Integer,</span><br><span class="line">List&lt;User&gt;&gt;&gt;();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">2</span>; i++) &#123;</span><br><span class="line">Map&lt;Integer,List&lt;User&gt;&gt; myMap = <span class="keyword">new</span> HashMap&lt;Integer,</span><br><span class="line">List&lt;User&gt;&gt;();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="number">2</span>; j++) &#123;</span><br><span class="line">List&lt;User&gt; myUserList = <span class="keyword">new</span> ArrayList&lt;User&gt;();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; <span class="number">3</span>; k++) &#123;</span><br><span class="line">User user = <span class="keyword">new</span> User();</span><br><span class="line">user.setId(k);</span><br><span class="line">user.setName(<span class="string">&quot;张三&quot;</span>+k);</span><br><span class="line">user.setPhone(<span class="string">&quot;1350000000&quot;</span>+k);</span><br><span class="line">user.setAddress(<span class="string">&quot;广州市&quot;</span>+i);</span><br><span class="line">myUserList.add(user);</span><br><span class="line">&#125;</span><br><span class="line">myMap.put(j,myUserList);</span><br><span class="line">&#125;</span><br><span class="line">myList.add(myMap);</span><br><span class="line">&#125;</span><br><span class="line">model.addAttribute(<span class="string">&quot;myList&quot;</span>,myList);</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">th:each</span>=<span class="string">&quot;myListMap:$&#123;myList&#125;&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">th:each</span>=<span class="string">&quot;myListMapObj:$&#123;myListMap&#125;&quot;</span>&gt;</span></span><br><span class="line">Map 集合的 key： <span class="tag">&lt;<span class="name">span</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;myListMapObj.key&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">th:each</span>=<span class="string">&quot;myListMapObjList:$&#123;myListMapObj.value&#125;&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;myListMapObjList.id&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;myListMapObjList.name&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;myListMapObjList.phone&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;myListMapObjList.address&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>条件判断：</strong></p><ol><li>th:if用法：如果满足条件显示，否则不显示</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">th:if</span>=<span class="string">&quot;$&#123;sex eq 1&#125;&quot;</span>&gt;</span></span><br><span class="line">男： <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">th:value</span>=<span class="string">&quot;1&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="2"><li>th:unless：如果满足添加不显示，否则显示</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">th:unless</span>=<span class="string">&quot;$&#123;sex == 1&#125;&quot;</span>&gt;</span></span><br><span class="line">男： <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">th:value</span>=<span class="string">&quot;1&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">th:unless</span>=<span class="string">&quot;$&#123;sex eq 0&#125;&quot;</span>&gt;</span></span><br><span class="line">女： <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">th:value</span>=<span class="string">&quot;0&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="3"><li>th:switch/th:case用法：一旦某个 case 判断值为 true，剩余的 case 默认不执行，“*”表示默认的 case，前面的 case 都不匹配时候，执行默认的 case</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>th:switch/th:case 用法<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">th:switch</span>=<span class="string">&quot;$&#123;sex&#125;&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">th:case</span>=<span class="string">&quot;1&quot;</span>&gt;</span>性别：男<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">th:case</span>=<span class="string">&quot;2&quot;</span>&gt;</span>性别：女<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">th:case</span>=<span class="string">&quot;*&quot;</span>&gt;</span>性别：保密<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>内敛文本</strong>：（ th:inline=”text”）内敛文本表达式不依赖于 html 标签，直接使用内敛表达式[[表达式]]即可获取动态数据，但必须要求在父级标签上加 th:inline = “text”属性(一般我们将 th:inline=”text”放到body标签中)</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">th:inline</span>=<span class="string">&quot;text&quot;</span>&gt;</span></span><br><span class="line">用户编号： <span class="tag">&lt;<span class="name">div</span>&gt;</span>[[$&#123;user.id&#125;]]<span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">用户姓名： [[$&#123;user.name&#125;]]<span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">用户手机号： [[$&#123;user.phone&#125;]]<span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">用户地址： [[$&#123;user.address&#125;]]<span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>字符串拼接：</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">th:text</span>=<span class="string">&quot;&#x27;共&#x27;+$&#123;totalRows&#125;+&#x27;条&#x27;+$&#123;totalPage&#125;+&#x27;页，当前第&#x27;+$&#123;currentPage&#125;+&#x27;</span></span></span><br><span class="line"><span class="tag"><span class="string">页&#x27;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>另一种更优雅的方式：使用&quot;|要拼接的内容|&quot;减少字符串拼接的加号<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">th:text</span>=<span class="string">&quot;|共$&#123;totalRows&#125;条$&#123;totalPage&#125;页,当前第$&#123;currentPage&#125;页|&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>表达式基本对象</strong>：</p><ol><li>#request:</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//获取协议名称</span></span><br><span class="line">var scheme = [[$&#123;#request.getScheme()&#125;]];</span><br><span class="line"><span class="comment">//获取服务 IP 地址</span></span><br><span class="line">var serverName = [[$&#123;#request.getServerName()&#125;]];</span><br><span class="line"><span class="comment">//获取服务端口号</span></span><br><span class="line">var serverPort = [[$&#123;#request.getServerPort()&#125;]];</span><br><span class="line"><span class="comment">//获取上下文根</span></span><br><span class="line">var contextPath = [[$&#123;#request.getContextPath()&#125;]];</span><br><span class="line"><span class="keyword">var</span> allPath = scheme+<span class="string">&quot;://&quot;</span>+serverName+<span class="string">&quot;:&quot;</span>+serverPort+contextPath;</span><br><span class="line">alert(allPath);</span><br></pre></td></tr></table></figure><ol start="2"><li>#session:</li></ol><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;h1&gt;从 SESSION 中获取用户名称&lt;/h1&gt;</span><br><span class="line">&lt;span th:text=&quot;$&#123;#session.getAttribute(&#x27;username&#x27;)&#125;&quot;&gt;&lt;/span&gt;&lt;br/&gt;</span><br><span class="line">&lt;span th:text=&quot;$&#123;#httpSession.getAttribute(&#x27;username&#x27;)&#125;&quot;&gt;&lt;/span&gt;</span><br></pre></td></tr></table></figure><p><strong>表达式功能对象</strong>：模板引擎提供的一组功能性内置对象，可以在模板中直接使用这些对象提供的功能方法工作中常使用的数据类型，如集合，时间，数值。内置功能对象前都需要加#号，内置对象一般都以 s 结尾<br>官方手册： <a href="http://www.thymeleaf.org/doc/tutorials/3.0/usingthymeleaf.html">http://www.thymeleaf.org/doc/tutorials/3.0/usingthymeleaf.html</a></p><p>#dates: java.util.Date 对象的实用方法：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;#dates.format(curDate, &#x27;yyyy-MM-dd HH:mm:ss&#x27;)&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure><p>#calendars: 和 dates 类似, 但是 java.util.Calendar 对象；<br>#numbers: 格式化数字对象的实用方法；<br>#strings: 字符串对象的实用方法： contains, startsWith, prepending/appending 等；<br>#objects: 对 objects 操作的实用方法；<br>#bools: 对布尔值求值的实用方法；<br>#arrays: 数组的实用方法；<br>#lists: list 的实用方法，比如:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;#lists.size(datas)&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure><p>#sets: set 的实用方法；<br>#maps: map 的实用方法；<br>#aggregates: 对数组或集合创建聚合的实用方法；</p>]]></content>
      
      
      <categories>
          
          <category> Thymleaf </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Thymleaf </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Springboot的环境搭建与使用</title>
      <link href="2021/04/24/Springboot%E7%9A%84%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E4%B8%8E%E4%BD%BF%E7%94%A8/"/>
      <url>2021/04/24/Springboot%E7%9A%84%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E4%B8%8E%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="springboot简介："><a href="#springboot简介：" class="headerlink" title="springboot简介："></a>springboot简介：</h1><p> Spring Boot 是 Spring 家族中的一个全新的框架，它能简化我们之前采用 SpringMVC + Spring +MyBatis 框架进行开发的过程。</p><p><strong>springboot特性：</strong></p><ul><li>能够快速创建基于 Spring 的应用程序</li><li> 能够直接使用 java main 方法启动内嵌的 Tomcat 服务器运行 Spring Boot 程序，不需<br>要部署 war 包文件</li><li> 提供约定的 starter POM 来简化 Maven 配置，让 Maven 的配置变得简单</li><li> 自动化配置，根据项目的 Maven 依赖配置， Spring boot 自动配Spring、 Spring mvc等</li><li> 提供了程序的健康检查等功能</li><li> 基本可以完全不使用 XML 配置文件，采用注解配置</li></ul><p><strong>springboot四大核心：</strong></p><ol><li>自动配置</li><li>起步依赖</li><li>Actuator</li><li>命令行界面</li></ol><p><strong>springboot集成jsp：</strong></p><ol><li>添加springboot内嵌的tomcat对jsp的解析包依赖</li><li>在build标签中配置springboot要求jsp文件必须编译到指定的目录下</li><li>在springboot主配置文件中配置视图解析器</li><li>编写controller</li><li>在src/mai下创建一个webapp目录，然后再该目录下新建jsp页面</li></ol><p><strong>springboot工程下使用mybatis的逆向工程：</strong></p><ol><li> 拷贝GeneratorMapper.xml逆向工程的配置文件到项目的根目录下</li><li>根据项目和表的情况，修改配置文件</li><li> 在添加mybatis逆向工程的依赖</li><li>最后双击项目中maven下Plugins中mybatis-generate命令生成相关mapper和实体类对象</li></ol><ul><li><p>注意事项：如果数据库中表中的字段名称为user-name，生成的实体类对象属性名就按驼峰命名法生成userName，如果是userName或者username，生成的实体类对象属性名就是username，不识别大小写</p></li><li><p>注解：<br>@Mapper：在每一个mapper类上添加<br>@MapperScan：在springboot启动类上加上，扫描指定包下的所有mapper文件</p></li><li><p>mapper映射文件存放位置的方法：</p></li></ul><ol><li>将mapper映射文件放到与mapper接口同一目录，并在pom文件中指定资源文件夹进行编译</li><li>将mapper映射文件放到resource/mapper目录下，并在springboot核心配置中指定mapper映射文件的存放位置</li></ol><p><strong>springboot的事务使用：</strong></p><ol><li>在springoot启动类上添加@EnableTransactionsManagement 开启事务（springboot2.0以后可加可不加）</li><li>在springbootserviceImpl实现类的方法上（有增删改操作的方法）加上@Transactional注解</li></ol><p><strong>springboot中的springmvc：</strong></p><ol><li>@RestConroller：spring4新增的注解，是Controller的增强版，如果一个 Controller 类添加了@RestController，那么该 Controller 类下的所有方法都相当于添加了@ResponseBody 注解</li><li>@RequestMapping:支持get请求和post请求</li><li>@GetMapping：只支持get请求，相当于@RequestMapping（request.method=get），该注解主要用于查询操作，所有从浏览器地址栏输入的请求都是get请求</li><li>@PostMapping：只支持post请求，主要用于新增数据</li><li>@DeleteMapping：只支持delete请求，通常用于删除数据操作 </li><li>@PutMapping：只支持put请求，主要用于改数据操作</li></ol><ul><li>注意：工作中用到的主要还是get和post请求，查询用get，其他所有请求都可以用post</li></ul><p><strong>springboot中的RESTful：</strong></p><ul><li><p>简介：英文： Representational State Transfer，简称 REST，一种互联网软件架构设计的风格，但它并不是标准，它只是提出了一组客户端和服务器交互时的架构理念和设计原则，基于这种理念和原则设计的接口可以更简洁，更有层次任何的技术都可以实现这种理念，如果一个架构符合 REST 原则，就称它为 RESTFul 架构<br>比如我们要访问一个 http 接口： <a href="http://localhost:8080/boot/order?id=1021&amp;status=1">http://localhost:8080/boot/order?id=1021&amp;status=1</a><br>采用 RESTFul 风格则 http 地址为： <a href="http://localhost:8080/boot/order/1021/1">http://localhost:8080/boot/order/1021/1</a></p></li><li><p>使用原则：</p><pre><code> 1. 增 post 请求、删 delete 请求、改 put 请求、查 get 请求 2. 请求路径不要出现动词，都用名词名称  &amp;emsp;- 例如：查询订单接口     &amp;emsp;&amp;emsp;/boot/order/1021/1（推荐）     &amp;emsp;&amp;emsp;/boot/queryOrder/1021/1（不推荐） 3. 分页、排序等操作，不需要使用斜杠传参数</code></pre><p>&emsp;- 例如：订单列表接口<br>&emsp;&emsp;/boot/orders?page=1&amp;sort=desc<br>&emsp;&emsp;一般传的参数不是数据库表的字段，可以不采用斜杠</p></li><li><p>请求路径冲突的解决办法：</p></li></ul><ol><li>在RESTful风格中方法的请求方式会按增删改查的请求方式来区分<br>@PostMapping(value = “/student/{id}”)<br>@PutMapping(value = “/student/{id}”)</li><li>修改请求路径<br>@DeleteMapping(value = “/student/detail/{id}/{status}”)<br>@DeleteMapping(value = “/student/{id}/detail/{city}”)</li></ol><ul><li>@PathVariable:获取请求路径中的参数,实现 RESTFul 最主要的一个注解<br>public String updateStudent(@PathVariable(“id”) Integer id){}</li></ul><p><strong>springboot集成redis:</strong></p><ul><li>使用步骤:<pre><code> &amp;emsp;1.添加依赖 &amp;emsp;2.在pringboot主配置文件中配置redis &amp;emsp;3.创建RedisTemplate&lt;Object,Object&gt; redisTemplate对象调用其中的增删改查方法,泛型默认都用Object</code></pre></li></ul><p>springboot集成dubbo:</p><ol><li>创建接口普通maven工程,提供者和消费者的springboot框架的web工程</li><li>在消费者和提供者工程中添加dubbo和zookeeper,接口工程的依赖</li><li>编辑提供者和消费者的配置信息</li><li>编辑接口工程中的接口类</li><li>编辑提供者工程中的接口实现类,在实现类上方添加@Compoent注解将实现类注入容器中,再添加@Service(interfaceClass = StudentService.class,version = “1.0.0”,timeout = 15000)(此注解为alibaba下的)暴露接口,最后在提供者工程的springboot启动入口添加@EnableDubboConfiguration注解,开启dubbo配置</li><li>编辑消费者工程中的web层,在controller类中的service对象上添加@Reference(interfaceClass = StudentService.class,version = “1.0.0”,check = false)注解(此注解为alibaba下的),引入接口,最后在消费者工程的springboot启动入口添加@EnableDubboConfiguration注解,开启dubbo配置</li></ol><p><strong>springboot关闭log和设置log：</strong></p><ol><li>关闭log只需要再springboot启动入口类设置：<br>&emsp;SpringApplication springApplication = new<br>&emsp;SpringApplication(Application.class);<br>&emsp;//关闭启动 logo 的输出<br>&emsp;springApplication.setBannerMode(Banner.Mode.OFF);<br>&emsp;springApplication.run(args);</li><li>设置新的log只需要利用登录在线生成banner网站，并在resource目录下新建banner.txt文件，将在线生成的banner复制粘贴到新建文本中</li></ol><p><strong>springboot使用拦截器：</strong></p><ol><li>自定义拦截器类并实现HandlerInterceptor接口，并重写接口中的方法实现拦截的业务逻辑</li><li>创建一个config包，在包下新建一个拦截器类并实现WebMvcConfigurer接口，覆盖接口中的 addInterceptors 方法，在方法中注册接口并定义要拦截和放行的路径，并为该配置类添加@Configuration 注解，标注此类为一个配置类，让 Spring Boot 扫描到，这里的操作就相当于 SpringMVC 的注册拦截器 ，@Configuration 就相当于一个 applicationContext-mvc.xml编写config配置类文件</li></ol><p><strong>springboot使用filter过滤器：</strong></p><ol><li>使用注解的方式：首先创建一个类实现Filter接口并重写doFilter方法，并在类上添加@WebFilter注解和urlpattern属性，最后再springboot入口启动类上添加@ServletComponentScan(basePackages = “com.bjpowernode.springboot.filter”)扫描@WebFilter注解</li><li>使用配置类的方式：首先创建一个类实现Filter接口并重写doFilter方法，再创建一个配置类重写FilterRegistrationBean方法注册过滤器的bean对象并添加过滤路径<br>路径不能使用/user/**<br>只能用/user/*</li></ol><p><strong>springboot设置字符编码：</strong></p><ol><li>使用Filter的注解或配置类的方式</li><li>使用spirngboot配置文件配置</li></ol><p><strong>sringboot打war部署：</strong></p><ol><li>添加内嵌tomcat的jsp解析依赖，并配置jsp编译目录为META-INF/resources</li><li>在resource目录下创建webapp并执行为应用资源文件夹</li><li>在springboot著配置文件中设置jsp的前后缀</li><li>测试项目，测试程序没问题在开始打war包</li><li>在springboot入口启动类需继承SpringBootServletInitializer 类并覆<br>盖 configure 方法 ，在方法中构建新资源return builder.sources(Application.class)</li><li>在pom文件中设置打包方式和打包名称，并添加打包插件</li><li>利用maven的packing命令开始打包，在编译的类路径找到打包文件放到tomcat的webapp根目录下，再启动tomcat，tomcat的根路径和端口号为本地的配置</li></ol>]]></content>
      
      
      <categories>
          
          <category> Springboot </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Spring </tag>
            
            <tag> Springboot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Redis的发布订阅和主从复制</title>
      <link href="2021/04/23/Redis%E7%9A%84%E5%8F%91%E5%B8%83%E8%AE%A2%E9%98%85%E5%92%8C%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6/"/>
      <url>2021/04/23/Redis%E7%9A%84%E5%8F%91%E5%B8%83%E8%AE%A2%E9%98%85%E5%92%8C%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6/</url>
      
        <content type="html"><![CDATA[<h2 id="redis的发布与订阅"><a href="#redis的发布与订阅" class="headerlink" title="redis的发布与订阅"></a>redis的发布与订阅</h2><p><strong>简介：</strong></p><ul><li> 主机数据更新后根据配置和策略，自动同步到从机的master/slave机制，Master以写为主，Slave以读为主（只要有Slave角色那么就不能进行写操作）</li></ul><p><strong>常用命令：</strong></p><ul><li>subscribe channel [channel…]：订阅一个或多个频道的信息</li><li>psubscribe pattern [pattern]：订阅一个或多个符合给定模式的频道。模式以 * 作为通配符，例如：news.* 匹配所有以 news. 开头的频道</li><li>publish chanel message：将信息发送到指定的频道</li></ul><h2 id="redis的主从复制"><a href="#redis的主从复制" class="headerlink" title="redis的主从复制"></a>redis的主从复制</h2><p><strong>常用命令：</strong></p><ul><li>info replication:查看redis服务在集群中的角色等信息</li><li>slaveof 主机ip 主机port：设置某个redis服务为从机</li><li>slaveof no one：断开从机的主从关系</li></ul><h2 id="redis的集群搭建"><a href="#redis的集群搭建" class="headerlink" title="redis的集群搭建"></a>redis的集群搭建</h2><p> <strong>全量复制</strong>：一旦在从机上确定主从关系后，主机上已有的数据会全部同步复制到从机上<br> <strong>增量复制</strong>：在确定了主从关系后，主机在写入数据后会自动将增加的数据同步到从机上</p><p> <strong>redis集群搭建中发生异常的情况和处理方法</strong>：（在一主二从的情况下）</p><ol><li>主机宕机，从机原地待命。主机恢复后，一切又恢复正常。<br>处理方法：在主机宕机后，分配一台从机为主机角色，再设置另一台从机与新主机的主从关系，待原来的主机恢复后，可以设置另一台从机或者新主机为主从关系</li><li>从机宕机，主机少一个从机，其它从机不变。从机恢复后，不再是从机角色</li><li>解决方法：需要重新设置主从关系</li></ol><p> <strong>redis的哨兵模式</strong>：由于主机宕机的时间无法确定，就有了哨兵模式去监视主机，也就是上面所说的主机宕机，从机上位的自动版<br>    操作步骤：</p><ol><li>搭建集群架构</li><li>创建哨兵配置文件：redis安装目下创建配置文件：redis_sentinel.conf。并编辑里边的内容：sentinel monitor 哨兵名称 127.0.0.1 6379 1，表示：指定监控主机的ip地址，port端口，得到哨兵的投票数(当哨兵投票数大于或者等于此数时切换主从关系)</li><li>启动哨兵服务：redis-sentinel redis_sentinel.conf </li></ol><h2 id="Jedis的使用："><a href="#Jedis的使用：" class="headerlink" title="Jedis的使用："></a>Jedis的使用：</h2><p><strong>简介：</strong></p><ul><li>jedis是redis官网提供的提供的操作redis数据的技术。把所有的redis指令都定义成java工具类的方法，方法名和redis的指令名完全一样；开发通过程序访问redis，只需要使用工具类及其方法即可</li></ul><p><strong>操作步骤：</strong></p><ol><li>在maven中添加jedis的依赖</li><li>关闭linux的防火墙（如果是链接linux下的redis）</li><li>创建jedis连接，Jedis jedis=new Jedis(“url”,port);</li></ol>]]></content>
      
      
      <categories>
          
          <category> Redis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Redis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Redis的环境搭建与相关配置</title>
      <link href="2021/04/23/Redis%E7%9A%84%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E4%B8%8E%E7%9B%B8%E5%85%B3%E9%85%8D%E7%BD%AE/"/>
      <url>2021/04/23/Redis%E7%9A%84%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E4%B8%8E%E7%9B%B8%E5%85%B3%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h2 id="redis的网络相关配置"><a href="#redis的网络相关配置" class="headerlink" title="redis的网络相关配置"></a>redis的网络相关配置</h2><ul><li>bind：绑定ip地址，其他机器可以通过此ip地址访问redis，默认绑定127.0.0.1，也可以绑定我们本机的ip地址</li><li> port：绑定redis占用的端口，默认为6379</li><li>tcp-keepalive：tcp连接保活策略，可以通过tcp-keepalive配置项来进行设置，单位为秒，假如设置为60秒，则server端会每60秒向连接空闲的客户端发起一次ACK请求，以检查客户端是否已经挂掉，对于无响应的客户端则会关闭其连接。如果设置为0，则不会进行保活检测</li></ul><h2 id="redis的常规配置"><a href="#redis的常规配置" class="headerlink" title="redis的常规配置"></a>redis的常规配置</h2><ul><li> loglevel：日志级别，开发阶段可以设置成debug，生产阶段通常为notice和warnng</li><li>logfile：指定日志文件名，如果不指定，Redis只进行标准输出。要保证日志文件所在的目录必须存在，文件可以不存在。还要在redis启动时指定所使用的配置文件，否则配置不起作用</li><li>databases：配置Redis数据库的个数，默认是16个</li><li>requirepass：配置Redis的访问密码。默认不配置密码，即访问不需要密码验证。此配置项需要在protected-mode=yes时起作用。使用密码登录客户端：redis-cli -h ip -p 6379 -a pwd<h2 id="redis的RDB配置"><a href="#redis的RDB配置" class="headerlink" title="redis的RDB配置"></a>redis的RDB配置</h2></li><li>简介：Redis 默认的持久化方案。在指定的时间间隔内，执行指定次数的写操作，则会将内存中的数据写入到磁盘中。即在指定目录下生成一个dump.rdb文件。Redis重启会通过加载dump.rdb文件来恢复数据</li><li>Redis会复制一个与当前进程一样的进程。新进程的所有数据（变量、环境变量、程序计数器等）数值都和原进程一致，但是是一个全新的进程，并作为原进程的子进程，来进行持久化。<br>整个过程中，主进程是不进行任何IO操作的，这就确保了极高的性能。<br>如果需要进行大规模数据的恢复，且对于数据恢复的完整性不是非常敏感，那RDB方式要比AOF方式更加的高效。RDB的缺点是最后一次持久化后的数据可能丢失</li><li>save <seconds> <changes>：配置复合的快照触发条件，即Redis 在seconds秒内key改变changes次，Redis把快照内的数据保存到磁盘中一次。默认的策略是：<br>1分钟内改变了1万次<br>或者5分钟内改变了10次<br>或者15分钟内改变了1次<br>如果要禁用Redis的持久化功能，则把所有的save配置都注释掉</li><li>stop-writes-on-bgsave-error：当bgsave快照操作出错时停止写数据到磁盘，这样能保证内存数据和磁盘数据的一致性，但如果不在乎这种一致性，要在bgsave快照操作出错时继续写操作，这里需要配置为no</li><li>rdbcompression：设置对于存储到磁盘中的快照是否进行压缩，设置为yes时，Redis会采用LZF算法进行压缩；如果不想消耗CPU进行压缩的话，可以设置为no，关闭此功能</li><li>rdbchecksum：在存储快照以后，还可以让Redis使用CRC64算法来进行数据校验，但这样会消耗一定的性能，如果系统比较在意性能的提升，可以设置为no，关闭此功能</li><li>dbfilename：Redis持久化数据生成的文件名，默认是dump.rdb，也可以自己配置</li><li>dir：Redis持久化数据生成文件保存的目录，默认是./即redis的启动目录，也可以自己配置<h2 id="redis的AOF配置"><a href="#redis的AOF配置" class="headerlink" title="redis的AOF配置"></a>redis的AOF配置</h2></li><li>简介：Redis 默认不开启。它的出现是为了弥补RDB的不足（数据的不一致性），所以它采用日志的形式来记录每个写操作，并追加到文件中。Redis 重启会根据日志文件的内容将写指令从前到后执行一次以完成数据的恢复工作</li><li>Redis以日志的形式来记录每个写操作，将Redis执行过的所有写指令记录下来(读操作不记录)，<br>只许追加文件但不可以改写文件，redis启动之初会读取该文件重新构建数据，换言之，redis重启的话就根据日志文件的内容将写指令从前到后执行一次以完成数据的恢复工作</li><li>appendonly：配置是否开启AOF，yes表示开启，no表示关闭。默认是no</li><li>appendfilename：AOF保存文件名</li><li>appendfsync：AOF异步持久化策略<br>always：同步持久化，每次发生数据变化会立刻写入到磁盘中。性能较差但数据完整性比较好（慢，安全）<br>everysec：出厂默认推荐，每秒异步记录一次（默认值）<br>no：不即时同步，由操作系统决定何时同步</li><li>no-appendfsync-on rewrite：重写时是否可以运用appendsync，默认no，可以保证数据的安全性</li><li>auto-aof-rewrite-min-size：设置重写的基准值<h2 id="redis的事务配置"><a href="#redis的事务配置" class="headerlink" title="redis的事务配置"></a>redis的事务配置</h2></li><li>简介：允许把一组redis命令放在一起，把命令进行序列化，然后一起执行，保证部分原子性。</li></ul><p> <strong>常用命令：</strong></p><ul><li>multi：用于标记事务的开始， 将后续的命令逐个放入队列中，然后才能使用EXEC命令原子化地执行这个命令序列</li><li>exec：在一个事务中执行所有先前放入队列的命令，然后恢复正常的连接状态。<br>如果在把命令压入队列的过程中报错，则整个队列中的命令都不会执行，执行结果报错；<br>如果在压队列的过程中正常，在执行队列中某一个命令报错，则只会影响本条命令的执行结果，其它命令正常运行； 当使用WATCH命令时，只有当受监控的键没有被修改时，EXEC命令才会执行事务中的命令;而一旦执行了exec命令，之前加的所有watch监控全部取消</li><li>discard：清除所有先前在一个事务中放入队列的命令，并且结束事务。<br>如果使用了WATCH命令，那么DISCARD命令就会将当前连接监控的所有键取消监控</li><li>watch key [key …]：当某个事务需要按条件执行时，就要使用这个命令将给定的键设置为受监控的。如果被监控的key值在本事务外有修改时，则本事务所有指令都不会被执行。Watch命令相当于关系型数据库中的乐观锁</li><li>unwatch：清除所有先前为一个事务监控的键。如果在watch命令之后你调用了EXEC或DISCARD命令，那么就不需要手动调UNWATCH命令</li></ul><p><strong>原理：</strong></p><ul><li>如果一组命令中，有在压入事务队列过程中发生错误的命令，则本事务中所有的命令都不执行，能够保证事务的原子性。<pre><code>  multi</code></pre>  set k3 v3<br>  seta kk vv<br>  set k4 v4<br>  exec<br>如果一组命令中，在压入队列过程中正常，但是在执行事务队列命令时发生了错误，则只会影响发生错误的命令，不会影响其它命令的执行，不能够保证事务的原子性。<pre><code>  multi</code></pre>  set k3 v3<br>  incr k1<br>  set k4 v4<br>  exec</li></ul>]]></content>
      
      
      <categories>
          
          <category> Redis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Redis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Dubbo的环境搭建与使用</title>
      <link href="2021/04/23/Dubbo%E7%9A%84%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E4%B8%8E%E4%BD%BF%E7%94%A8/"/>
      <url>2021/04/23/Dubbo%E7%9A%84%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E4%B8%8E%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="dubbo的环境搭建"><a href="#dubbo的环境搭建" class="headerlink" title="dubbo的环境搭建"></a>dubbo的环境搭建</h2><p>  <strong>dubbo直连的环境搭建</strong><br> 1.创建服务者，并引入相关依赖<br> 2.创建消费者，引入依赖</p><p> <strong>dubbo注册中心的环境搭建</strong><br> 1.创建服务接口，将model类和service类的接口放在其中<br> 2.创建服务者，实现业务接口并引入dubbo的相关依赖<br> 3.创建消费者，编辑视图类并引入dubbo的相关依赖</p><h2 id="dubbo的相关使用信息"><a href="#dubbo的相关使用信息" class="headerlink" title="dubbo的相关使用信息"></a>dubbo的相关使用信息</h2><p>1.dubbo的默认端口号为20880，zookeeper的默认端口号为2181<br>2.开启zookeeper服务，双击zkserve.cmd<br>3.开启监控中心可视化界面，在cmd中输入java -jar dubbo-admin.jar开启</p>]]></content>
      
      
      <categories>
          
          <category> Dubbo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Dubbo </tag>
            
            <tag> Zookeeper </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Springmvc配置模板</title>
      <link href="2021/04/22/Springmvc%E9%85%8D%E7%BD%AE%E6%A8%A1%E6%9D%BF/"/>
      <url>2021/04/22/Springmvc%E9%85%8D%E7%BD%AE%E6%A8%A1%E6%9D%BF/</url>
      
        <content type="html"><![CDATA[<h2 id="dispatcherServlet-xml核心配置"><a href="#dispatcherServlet-xml核心配置" class="headerlink" title="dispatcherServlet.xml核心配置"></a>dispatcherServlet.xml核心配置</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:mvc</span>=<span class="string">&quot;http://www.springframework.org/schema/mvc&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--声明组件扫描器--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">&quot;com.bjpowernode.controller&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--声明视图解析器--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.web.servlet.view.InternalResourceViewResolver&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;prefix&quot;</span> <span class="attr">value</span>=<span class="string">&quot;/WEB-INF/jsp/&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;suffix&quot;</span> <span class="attr">value</span>=<span class="string">&quot;.jsp&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--声明注解驱动--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:annotation-driven</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="web-xml核心配置"><a href="#web-xml核心配置" class="headerlink" title="web.xml核心配置"></a>web.xml核心配置</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://xmlns.jcp.org/xml/ns/javaee&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">version</span>=<span class="string">&quot;4.0&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!--注册中央调度器--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>myweb<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>org.springframework.web.servlet.DispatcherServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath:conf/dispatcherServlet.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">load-on-startup</span>&gt;</span>1<span class="tag">&lt;/<span class="name">load-on-startup</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>myweb<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>*.do<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!--注册spring的监听器--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">context-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath:conf/applicationContext.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">context-param</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">listener</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">listener-class</span>&gt;</span>org.springframework.web.context.ContextLoaderListener<span class="tag">&lt;/<span class="name">listener-class</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">listener</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!--注册字符集过滤器--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>characterEncodingFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>org.springframework.web.filter.CharacterEncodingFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>encoding<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>utf-8<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>forceRequestEncoding<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>true<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>forceResponseEncoding<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>true<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>characterEncodingFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="pom-xm依赖"><a href="#pom-xm依赖" class="headerlink" title="pom.xm依赖"></a>pom.xm依赖</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--servlet依赖--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>javax.servlet-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.1.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- jsp依赖 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet.jsp<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jsp-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2.1-b03<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-webmvc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.2.5.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.fasterxml.jackson.core<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.9.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.fasterxml.jackson.core<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-databind<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.9.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> SSM </category>
          
          <category> Springmvc </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SSM </tag>
            
            <tag> Springmvc </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>applicationContext配置模板</title>
      <link href="2021/04/22/applicationContext-xml%E9%85%8D%E7%BD%AE%E6%A8%A1%E6%9D%BF/"/>
      <url>2021/04/22/applicationContext-xml%E9%85%8D%E7%BD%AE%E6%A8%A1%E6%9D%BF/</url>
      
        <content type="html"><![CDATA[<h2 id="applicationContext-xml核心配置"><a href="#applicationContext-xml核心配置" class="headerlink" title="applicationContext.xml核心配置"></a>applicationContext.xml核心配置</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--引入配置文件--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:property-placeholder</span> <span class="attr">location</span>=<span class="string">&quot;classpath:config/jdbc.properties&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--声明数据源，连接数据库--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.alibaba.druid.pool.DruidDataSource&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">init-method</span>=<span class="string">&quot;init&quot;</span> <span class="attr">destroy-method</span>=<span class="string">&quot;close&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.url&#125;&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.username&#125;&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.password&#125;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--SqlSessionFactoryBean创建SqlSessionFactory--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;sqlSessionFactory&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.mybatis.spring.SqlSessionFactoryBean&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;dataSource&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;configLocation&quot;</span> <span class="attr">value</span>=<span class="string">&quot;classpath:config/mybatis.xml&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--声明mybatis的扫描器，创建dao对象--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.mybatis.spring.mapper.MapperScannerConfigurer&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;sqlSessionFactoryBeanName&quot;</span> <span class="attr">value</span>=<span class="string">&quot;sqlSessionFactory&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;basePackage&quot;</span> <span class="attr">value</span>=<span class="string">&quot;com.zxs.dao&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--声明service的注解@Service所在的包名位置--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">&quot;com.zxs.service&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--事务配置：注解的配置， aspectj的配置--&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">&lt;!--声明事务管理器--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;transactionManager&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.jdbc.datasource.DataSourceTransactionManager&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;dataSource&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--声明事务注解驱动(小型和中型项目使用)--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--&lt;tx:annotation-driven transaction-manager=&quot;transactionManager&quot;/&gt;--&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--用AOP技术配置事务，代码分离（大型项目使用）--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tx:advice</span> <span class="attr">id</span>=<span class="string">&quot;myAdvice&quot;</span> <span class="attr">transaction-manager</span>=<span class="string">&quot;transactionManager&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tx:attributes</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--tx:method：给具体的方法配置事务属性，method可以有多个，分别给不同的方法设置事务属性</span></span><br><span class="line"><span class="comment">                name:方法名称，1）完整的方法名称，不带有包和类。</span></span><br><span class="line"><span class="comment">                              2）方法可以使用通配符,* 表示任意字符</span></span><br><span class="line"><span class="comment">            --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">&quot;buy&quot;</span> <span class="attr">propagation</span>=<span class="string">&quot;REQUIRED&quot;</span> <span class="attr">isolation</span>=<span class="string">&quot;DEFAULT&quot;</span></span></span><br><span class="line"><span class="tag">                       <span class="attr">rollback-for</span>=<span class="string">&quot;java.lang.NullPointerException,com.zxs.exception.NotEnoughException&quot;</span>/&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--使用通配符，指定很多的方法--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">&quot;add*&quot;</span> <span class="attr">propagation</span>=<span class="string">&quot;REQUIRES_NEW&quot;</span> /&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--指定修改方法--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">&quot;modify*&quot;</span> /&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--删除方法--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">&quot;remove*&quot;</span> /&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--查询方法，query，search，find--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">&quot;*&quot;</span> <span class="attr">propagation</span>=<span class="string">&quot;SUPPORTS&quot;</span> <span class="attr">read-only</span>=<span class="string">&quot;true&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tx:attributes</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tx:advice</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--配置aop--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">aop:config</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--配置切入点表达式：指定哪些包中类，要使用事务</span></span><br><span class="line"><span class="comment">            id:切入点表达式的名称，唯一值</span></span><br><span class="line"><span class="comment">            expression：切入点表达式，指定哪些类要使用事务，aspectj会创建代理对象</span></span><br><span class="line"><span class="comment">            com.zxs.service</span></span><br><span class="line"><span class="comment">            com.crm.service</span></span><br><span class="line"><span class="comment">            com.service</span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">aop:pointcut</span> <span class="attr">id</span>=<span class="string">&quot;servicePt&quot;</span> <span class="attr">expression</span>=<span class="string">&quot;execution(* *..service..*.*(..))&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--配置增强器：关联adivce和pointcut</span></span><br><span class="line"><span class="comment">           advice-ref:通知，上面tx:advice哪里的配置</span></span><br><span class="line"><span class="comment">           pointcut-ref：切入点表达式的id</span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">aop:advisor</span> <span class="attr">advice-ref</span>=<span class="string">&quot;myAdvice&quot;</span> <span class="attr">pointcut-ref</span>=<span class="string">&quot;servicePt&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">aop:config</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="comment">&lt;!--    声明切面类对象--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;myAspect&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.zxs.aspectj.MyAspect&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;myAspectByTarget&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.zxs.aspectj.MyAspectByTarget&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--    声明自动代理生成器，创建代理--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">aop:aspectj-autoproxy</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="pom-xml核心依赖"><a href="#pom-xml核心依赖" class="headerlink" title="pom.xml核心依赖"></a>pom.xml核心依赖</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-tx<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.2.5.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-jdbc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.2.5.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    </span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> SSM </category>
          
          <category> Spring </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SSM </tag>
            
            <tag> Spring </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mybatis配置模板</title>
      <link href="2021/04/22/Mybatis%E9%85%8D%E7%BD%AE%E6%A8%A1%E6%9D%BF/"/>
      <url>2021/04/22/Mybatis%E9%85%8D%E7%BD%AE%E6%A8%A1%E6%9D%BF/</url>
      
        <content type="html"><![CDATA[<h2 id="mybatis-xml配置模板"><a href="#mybatis-xml配置模板" class="headerlink" title="mybatis.xml配置模板"></a>mybatis.xml配置模板</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">configuration</span></span></span><br><span class="line"><span class="meta">        <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//mybatis.org//DTD Config 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">&quot;http://mybatis.org/dtd/mybatis-3-config.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="comment">&lt;!-- settings：控制mybatis全局行为--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">settings</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--设置mybatis输出日志--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">&quot;logImpl&quot;</span> <span class="attr">value</span>=<span class="string">&quot;STDOUT_LOGGING&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">settings</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--设置别名--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">typeAliases</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--name:实体类所在的包名(不是实体类的包名也可以)--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">&quot;com.zxs.domain&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">typeAliases</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- sql mapper(sql映射文件)的位置--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">          name：是包名， 这个包中的所有mapper.xml一次都能加载</span></span><br><span class="line"><span class="comment">          使用package的要求：</span></span><br><span class="line"><span class="comment">           1. mapper文件名称和dao接口名必须完全一样，包括大小写</span></span><br><span class="line"><span class="comment">           2. mapper文件和dao接口必须在同一目录</span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">&quot;com.zxs.dao&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="xxxDao-xml配置模板"><a href="#xxxDao-xml配置模板" class="headerlink" title="xxxDao.xml配置模板"></a>xxxDao.xml配置模板</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span></span></span><br><span class="line"><span class="meta">        <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.bjpowernode.dao.StudentDao&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;selectStudents&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;Student&quot;</span>&gt;</span></span><br><span class="line">        select id,name,age from student order by id asc</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="jdbc-properties配置模板"><a href="#jdbc-properties配置模板" class="headerlink" title="jdbc.properties配置模板"></a>jdbc.properties配置模板</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">jdbc.driver=com.mysql.cj.jdbc.Driver</span></span><br><span class="line"><span class="string">jdbc.url=jdbc:mysql://localhost:3306/ssm_test</span></span><br><span class="line"><span class="string">jdbc.username=root</span></span><br><span class="line"><span class="string">jdbc.password=xxx</span></span><br></pre></td></tr></table></figure><h2 id="pom-xml核心依赖"><a href="#pom-xml核心依赖" class="headerlink" title="pom.xml核心依赖"></a>pom.xml核心依赖</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.3.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.5.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.9<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>druid<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> SSM </category>
          
          <category> Mybatis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mybatis </tag>
            
            <tag> SSM </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mysql的多表练习</title>
      <link href="2021/04/22/Mysql%E7%9A%84%E5%A4%9A%E8%A1%A8%E7%BB%83%E4%B9%A0/"/>
      <url>2021/04/22/Mysql%E7%9A%84%E5%A4%9A%E8%A1%A8%E7%BB%83%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h2 id="数据库的多表练习"><a href="#数据库的多表练习" class="headerlink" title="数据库的多表练习"></a>数据库的多表练习</h2><p>– 添加部门表</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> dept(</span><br><span class="line">id <span class="type">int</span> <span class="keyword">PRIMARY</span> KEY,</span><br><span class="line">dname <span class="type">varchar</span>(<span class="number">10</span>),<span class="comment">-- 部门名称</span></span><br><span class="line">loc <span class="type">varchar</span>(<span class="number">10</span>)<span class="comment">-- 所在地</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>– 添加四个部门</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">into</span> dept(id,dname,loc) <span class="keyword">values</span>(<span class="number">10</span>,<span class="string">&#x27;教研部&#x27;</span>,<span class="string">&#x27;北京&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">into</span> dept(id,dname,loc) <span class="keyword">values</span>(<span class="number">20</span>,<span class="string">&#x27;学工部&#x27;</span>,<span class="string">&#x27;上海&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">into</span> dept(id,dname,loc) <span class="keyword">values</span>(<span class="number">30</span>,<span class="string">&#x27;销售部&#x27;</span>,<span class="string">&#x27;广州&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">into</span> dept(id,dname,loc) <span class="keyword">values</span>(<span class="number">40</span>,<span class="string">&#x27;财务部&#x27;</span>,<span class="string">&#x27;深圳&#x27;</span>);</span><br></pre></td></tr></table></figure><p>– 职务表</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">table</span> job(</span><br><span class="line">id <span class="type">int</span> <span class="keyword">PRIMARY</span> KEY,</span><br><span class="line">jname <span class="type">varchar</span>(<span class="number">20</span>),</span><br><span class="line">description <span class="type">varchar</span>(<span class="number">50</span>)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>–添加记录</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> job(id,jname,description) <span class="keyword">values</span>(<span class="number">1</span>,<span class="string">&#x27;董事长&#x27;</span>,<span class="string">&#x27;管理整个公司&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> job(id,jname,description) <span class="keyword">values</span>(<span class="number">2</span>,<span class="string">&#x27;经理&#x27;</span>,<span class="string">&#x27;管理销售部门&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> job(id,jname,description) <span class="keyword">values</span>(<span class="number">3</span>,<span class="string">&#x27;销售员&#x27;</span>,<span class="string">&#x27;向客人推销产品&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> job(id,jname,description) <span class="keyword">values</span>(<span class="number">4</span>,<span class="string">&#x27;文员&#x27;</span>,<span class="string">&#x27;使用办公软件&#x27;</span>);</span><br></pre></td></tr></table></figure><p>– 员工表</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> emp(</span><br><span class="line">id <span class="type">int</span> <span class="keyword">PRIMARY</span> KEY,</span><br><span class="line">ename <span class="type">varchar</span>(<span class="number">10</span>),</span><br><span class="line">job_id <span class="type">int</span>,<span class="comment">-- 职位id</span></span><br><span class="line">mgr <span class="type">int</span>,<span class="comment">-- 上级领导</span></span><br><span class="line">joindate <span class="type">date</span>, <span class="comment">-- 入职日期</span></span><br><span class="line">salary <span class="type">DECIMAL</span>(<span class="number">7</span>,<span class="number">2</span>),<span class="comment">-- 工资</span></span><br><span class="line">bonus <span class="type">DECIMAL</span>(<span class="number">7</span>,<span class="number">2</span>),<span class="comment">-- 奖金</span></span><br><span class="line">dept_id <span class="type">int</span>, <span class="comment">-- 所在部门编号</span></span><br><span class="line"><span class="keyword">constraint</span> job_ref_id <span class="keyword">foreign</span> key(job_id) <span class="keyword">references</span> job(id),<span class="comment">-- 关联工作表的id</span></span><br><span class="line"><span class="keyword">constraint</span> dep_ref_id <span class="keyword">foreign</span> key(dept_id) <span class="keyword">references</span> dept(id)<span class="comment">-- 关联部门表的id</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>–添加记录</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> emp(id,ename,job_id,mgr,joindate,salary,bonus,dept_id) <span class="keyword">VALUES</span> </span><br><span class="line">(<span class="number">1001</span>,<span class="string">&#x27;孙悟空&#x27;</span>,<span class="number">4</span>,<span class="number">1004</span>,<span class="string">&#x27;2000-12-17&#x27;</span>,<span class="string">&#x27;8000.00&#x27;</span>,<span class="keyword">NULL</span>,<span class="number">20</span>),</span><br><span class="line">(<span class="number">1002</span>,<span class="string">&#x27;卢俊义&#x27;</span>,<span class="number">3</span>,<span class="number">1006</span>,<span class="string">&#x27;2001-02-20&#x27;</span>,<span class="string">&#x27;16000.00&#x27;</span>,<span class="string">&#x27;3000.00&#x27;</span>,<span class="number">30</span>),</span><br><span class="line">(<span class="number">1003</span>,<span class="string">&#x27;林冲&#x27;</span>,<span class="number">3</span>,<span class="number">1006</span>,<span class="string">&#x27;2001-02-22&#x27;</span>,<span class="string">&#x27;12500.00&#x27;</span>,<span class="string">&#x27;5000.00&#x27;</span>,<span class="number">30</span>),</span><br><span class="line">(<span class="number">1004</span>,<span class="string">&#x27;唐僧&#x27;</span>,<span class="number">2</span>,<span class="number">1009</span>,<span class="string">&#x27;2001-04-02&#x27;</span>,<span class="string">&#x27;29750.00&#x27;</span>,<span class="keyword">NULL</span>,<span class="number">20</span>),</span><br><span class="line">(<span class="number">1005</span>,<span class="string">&#x27;李逵&#x27;</span>,<span class="number">4</span>,<span class="number">1006</span>,<span class="string">&#x27;2001-09-28&#x27;</span>,<span class="string">&#x27;12500.00&#x27;</span>,<span class="string">&#x27;14000.00&#x27;</span>,<span class="number">30</span>),</span><br><span class="line">(<span class="number">1006</span>,<span class="string">&#x27;宋江&#x27;</span>,<span class="number">2</span>,<span class="number">1009</span>,<span class="string">&#x27;2001-05-01&#x27;</span>,<span class="string">&#x27;28500.00&#x27;</span>,<span class="keyword">NULL</span>,<span class="number">30</span>),</span><br><span class="line">(<span class="number">1007</span>,<span class="string">&#x27;刘备&#x27;</span>,<span class="number">2</span>,<span class="number">1009</span>,<span class="string">&#x27;2001-09-01&#x27;</span>,<span class="string">&#x27;24500.00&#x27;</span>,<span class="keyword">NULL</span>,<span class="number">10</span>),</span><br><span class="line">(<span class="number">1008</span>,<span class="string">&#x27;猪八戒&#x27;</span>,<span class="number">4</span>,<span class="number">1004</span>,<span class="string">&#x27;2007-04-19&#x27;</span>,<span class="string">&#x27;30000.00&#x27;</span>,<span class="keyword">NULL</span>,<span class="number">20</span>),</span><br><span class="line">(<span class="number">1009</span>,<span class="string">&#x27;罗贯中&#x27;</span>,<span class="number">1</span>,<span class="keyword">NULL</span>,<span class="string">&#x27;2001-11-17&#x27;</span>,<span class="string">&#x27;50000.00&#x27;</span>,<span class="keyword">NULL</span>,<span class="number">10</span>),</span><br><span class="line">(<span class="number">1010</span>,<span class="string">&#x27;吴用&#x27;</span>,<span class="number">3</span>,<span class="number">1006</span>,<span class="string">&#x27;2001-09-08&#x27;</span>,<span class="string">&#x27;15000.00&#x27;</span>,<span class="string">&#x27;0.00&#x27;</span>,<span class="number">30</span>),</span><br><span class="line">(<span class="number">1011</span>,<span class="string">&#x27;沙僧&#x27;</span>,<span class="number">4</span>,<span class="number">1004</span>,<span class="string">&#x27;2007-05-23&#x27;</span>,<span class="string">&#x27;11000.00&#x27;</span>,<span class="keyword">NULL</span>,<span class="number">20</span>),</span><br><span class="line">(<span class="number">1012</span>,<span class="string">&#x27;李逵&#x27;</span>,<span class="number">4</span>,<span class="number">1006</span>,<span class="string">&#x27;2001-12-03&#x27;</span>,<span class="string">&#x27;9500.00&#x27;</span>,<span class="keyword">NULL</span>,<span class="number">30</span>),</span><br><span class="line">(<span class="number">1013</span>,<span class="string">&#x27;小白龙&#x27;</span>,<span class="number">4</span>,<span class="number">1004</span>,<span class="string">&#x27;2001-12-03&#x27;</span>,<span class="string">&#x27;30000.00&#x27;</span>,<span class="keyword">NULL</span>,<span class="number">20</span>),</span><br><span class="line">(<span class="number">1014</span>,<span class="string">&#x27;关羽&#x27;</span>,<span class="number">4</span>,<span class="number">1007</span>,<span class="string">&#x27;2002-01-23&#x27;</span>,<span class="string">&#x27;13000.00&#x27;</span>,<span class="keyword">NULL</span>,<span class="number">10</span>);</span><br></pre></td></tr></table></figure><p>– 工资等级表</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> salarygrade (</span><br><span class="line">  grade <span class="type">INT</span> <span class="keyword">PRIMARY</span> KEY,   <span class="comment">-- 级别</span></span><br><span class="line">  losalary <span class="type">INT</span>,  <span class="comment">-- 最低工资</span></span><br><span class="line">  hisalary <span class="type">INT</span> <span class="comment">-- 最高工资</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>– 添加5个工资等级</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> salarygrade(grade,losalary,hisalary) <span class="keyword">VALUES</span> </span><br><span class="line">(<span class="number">1</span>,<span class="number">7000</span>,<span class="number">12000</span>),</span><br><span class="line">(<span class="number">2</span>,<span class="number">12010</span>,<span class="number">14000</span>),</span><br><span class="line">(<span class="number">3</span>,<span class="number">14010</span>,<span class="number">20000</span>),</span><br><span class="line">(<span class="number">4</span>,<span class="number">20010</span>,<span class="number">30000</span>),</span><br><span class="line">(<span class="number">5</span>,<span class="number">30010</span>,<span class="number">99990</span>);</span><br></pre></td></tr></table></figure><h1 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h1><p> 1.查询所有员工信息。查询员工编号，员工姓名，工资，职务名称，职务描述</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> </span><br><span class="line">emp.id,emp.ename,emp.salary,job.jname,job.description </span><br><span class="line"><span class="keyword">from</span> emp,job </span><br><span class="line"><span class="keyword">where</span> emp.job_id<span class="operator">=</span>job.id;</span><br></pre></td></tr></table></figure><p>– 2.查询员工编号，员工姓名，工资，职务名称，职务描述，部门名称，部门位置</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span></span><br><span class="line">emp.id,emp.ename,emp.salary,job.jname,job.description,dept.dname,dept.loc </span><br><span class="line"><span class="keyword">from</span> emp,job,dept </span><br><span class="line"><span class="keyword">where</span> emp.job_id<span class="operator">=</span>job.id <span class="keyword">and</span> emp.dept_id<span class="operator">=</span>dept.id;</span><br></pre></td></tr></table></figure><p>– 3.查询员工姓名，工资，工资等级</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> </span><br><span class="line">emp.ename,emp.salary,salarygrade.grade </span><br><span class="line"><span class="keyword">from</span> emp,salarygrade </span><br><span class="line"><span class="keyword">where</span> emp.salary <span class="keyword">between</span> salarygrade.losalary <span class="keyword">and</span> salarygrade.hisalary;</span><br></pre></td></tr></table></figure><p>– 4.查询员工姓名，工资，职务名称，职务描述，部门名称，部门位置，工资等级</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">emp.ename,emp.salary,job.jname,job.description,dept.dname,dept.loc,salarygrade.grade <span class="keyword">from</span> emp,job,dept,salarygrade </span><br><span class="line"><span class="keyword">where</span> </span><br><span class="line">emp.job_id<span class="operator">=</span>job.id <span class="keyword">and</span> </span><br><span class="line">emp.dept_id<span class="operator">=</span>dept.id <span class="keyword">and</span> </span><br><span class="line">emp.salary <span class="keyword">between</span> salarygrade.losalary <span class="keyword">and</span> salarygrade.hisalary;</span><br></pre></td></tr></table></figure><p>– 5.查询出部门编号、部门名称、部门位置、部门人数</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> dept.id,dept.dname,dept.loc,<span class="built_in">count</span>(emp.id) <span class="keyword">as</span> 部门人数 </span><br><span class="line"><span class="keyword">from</span> dept,emp </span><br><span class="line"><span class="keyword">where</span> dept.id<span class="operator">=</span>emp.dept_id <span class="keyword">group</span> <span class="keyword">by</span> emp.dept_id;</span><br></pre></td></tr></table></figure><p>– 6.查询所有员工的姓名及其直接上级的姓名,没有领导的员工也需要查询</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> e1.ename,e1.mgr,e2.id,e2.ename <span class="keyword">as</span> 上级领导 </span><br><span class="line"><span class="keyword">from</span> emp e1 <span class="keyword">left</span> <span class="keyword">join</span> emp e2 <span class="keyword">on</span> e1.mgr<span class="operator">=</span>e2.id;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mysql </tag>
            
            <tag> 数据库 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mysql增删改查基本语法</title>
      <link href="2021/04/22/Mysql%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/"/>
      <url>2021/04/22/Mysql%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h2 id="数据库基础"><a href="#数据库基础" class="headerlink" title="数据库基础"></a>数据库基础</h2><p><strong>1.创建使用</strong><br>      – 使用数据库 </p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">use work_test;</span><br></pre></td></tr></table></figure><p>   –创建数据库 </p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> database work_test; </span><br><span class="line"><span class="keyword">create</span> database if <span class="keyword">not</span> <span class="keyword">exists</span> work_test <span class="type">character</span> <span class="keyword">set</span> gbk;</span><br></pre></td></tr></table></figure><p>– 创建表</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> dept(</span><br><span class="line">id <span class="type">int</span> <span class="keyword">primary</span> key auto_increment,</span><br><span class="line">name <span class="type">varchar</span>(<span class="number">20</span>)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>–创建主键关联</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> emp(</span><br><span class="line">id <span class="type">int</span> <span class="keyword">primary</span> key auto_increment,</span><br><span class="line">name <span class="type">VARCHAR</span>(<span class="number">20</span>),</span><br><span class="line">gender <span class="type">char</span>(<span class="number">1</span>),</span><br><span class="line">salary <span class="keyword">DOUBLE</span>,</span><br><span class="line">join_date <span class="type">date</span>,</span><br><span class="line">dept_id <span class="type">int</span>,</span><br><span class="line"><span class="keyword">foreign</span> key(dept_id) <span class="keyword">references</span> dept(id) <span class="comment">-- 外键,关联部门表(部门表的主键)</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>– 复制表</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> emp2 <span class="keyword">like</span> emp; </span><br></pre></td></tr></table></figure><p><strong>2.查询</strong><br> – 查询所有数据库 </p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> databases;</span><br></pre></td></tr></table></figure><p>  – 查询所有表名称 </p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> tables;</span><br></pre></td></tr></table></figure><p>   – 查询某个数据库的字符集 </p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> <span class="keyword">create</span> database work_test;</span><br></pre></td></tr></table></figure><p>   – 查询正在使用的数据库名称 </p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> database();</span><br></pre></td></tr></table></figure><p>   – 查询表结构 </p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">desc</span> emp;    </span><br></pre></td></tr></table></figure><p><strong>3.删除</strong><br>– 删除数据库 </p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">drop</span> database work_test;</span><br></pre></td></tr></table></figure><p>  – 删除表 </p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> test; </span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> if <span class="keyword">exists</span> test;</span><br></pre></td></tr></table></figure><p>  – 删除列 </p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> test <span class="keyword">drop</span> name;</span><br></pre></td></tr></table></figure><p>  – 删除表中所有记录 </p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> test <span class="comment">-- 不推荐使用 </span></span><br><span class="line"><span class="keyword">truncate</span> <span class="keyword">table</span> test; <span class="comment">-- 效率高，推荐使用,先删除整张表，在创建一张新表    </span></span><br></pre></td></tr></table></figure><p><strong>4.修改</strong><br>     – 修改数据库的字符集 </p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> database work_test <span class="type">character</span> <span class="keyword">set</span> utf<span class="number">-8</span>;</span><br></pre></td></tr></table></figure><p>   – 修改表的字符集 </p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> test <span class="type">character</span> <span class="keyword">set</span> utf<span class="number">-8</span>;</span><br></pre></td></tr></table></figure><p>   – 修改表的名称 </p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> test rename <span class="keyword">to</span> newtest;</span><br></pre></td></tr></table></figure><p>   – 修改列名称，类型 </p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名 change 列名 新列名 新数据类型 <span class="keyword">alter</span> <span class="keyword">table</span> 表名 modify 列名 新数据类型</span><br></pre></td></tr></table></figure><p>   – 修改表中数据 </p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">update 表名 <span class="keyword">set</span> 列名<span class="number">1</span> <span class="operator">=</span> 值<span class="number">1</span>,列名<span class="number">2</span> <span class="operator">=</span> 值<span class="number">2</span>,... [<span class="keyword">where</span> 条件];</span><br></pre></td></tr></table></figure><p><strong>5.添加</strong><br>    – 添加记录</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> dept(name) <span class="keyword">values</span>(<span class="string">&#x27;开发部&#x27;</span>),(<span class="string">&#x27;市场部&#x27;</span>),(<span class="string">&#x27;财务部&#x27;</span>);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mysql </tag>
            
            <tag> 数据库 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>pom常用配置信息</title>
      <link href="2021/04/21/pom%E5%B8%B8%E7%94%A8%E9%85%8D%E7%BD%AE%E4%BF%A1%E6%81%AF/"/>
      <url>2021/04/21/pom%E5%B8%B8%E7%94%A8%E9%85%8D%E7%BD%AE%E4%BF%A1%E6%81%AF/</url>
      
        <content type="html"><![CDATA[<h2 id="设置字符集编码以及编译级别"><a href="#设置字符集编码以及编译级别" class="headerlink" title="设置字符集编码以及编译级别"></a>设置字符集编码以及编译级别</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">maven.compiler.source</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">maven.compiler.source</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">maven.compiler.target</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">maven.compiler.target</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-compiler-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">source</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">source</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">target</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">target</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="扫描mybatis全局的mapper文件"><a href="#扫描mybatis全局的mapper文件" class="headerlink" title="扫描mybatis全局的mapper文件"></a>扫描mybatis全局的mapper文件</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/java<span class="tag">&lt;/<span class="name">directory</span>&gt;</span><span class="comment">&lt;!--所在的目录--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">includes</span>&gt;</span><span class="comment">&lt;!--包括目录下的.properties,.xml 文件都会扫描到--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.properties<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.xml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">filtering</span>&gt;</span>false<span class="tag">&lt;/<span class="name">filtering</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="mybatis逆向工程代码自动生成插件"><a href="#mybatis逆向工程代码自动生成插件" class="headerlink" title="mybatis逆向工程代码自动生成插件"></a>mybatis逆向工程代码自动生成插件</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--mybatis 代码自动生成插件--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis.generator<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-generator-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.3.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                    <span class="comment">&lt;!--配置文件的位置--&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">configurationFile</span>&gt;</span>GeneratorMapper.xml<span class="tag">&lt;/<span class="name">configurationFile</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">verbose</span>&gt;</span>true<span class="tag">&lt;/<span class="name">verbose</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">overwrite</span>&gt;</span>true<span class="tag">&lt;/<span class="name">overwrite</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Maven </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Maven </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Redis常用命令</title>
      <link href="2021/04/20/Redis%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
      <url>2021/04/20/Redis%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<h2 id="Redis基础命令"><a href="#Redis基础命令" class="headerlink" title="Redis基础命令"></a>Redis基础命令</h2><ol><li>查看服务器运行状态：ping</li><li>查看服务器他的统计信息：info [section]，section的值：server , clients ，memory等等</li><li>切换库命令：select index（默认16个库，从0开始）</li><li>启动redis服务：redis-serve.exe xxx.conf &amp;</li><li>关闭redis服务：在redis客户端输入 redis-cli shutdown</li><li>打开redis客户端：redis-cli -h127.0.0.1 -p 6379<h2 id="Redis中key的操作命令"><a href="#Redis中key的操作命令" class="headerlink" title="Redis中key的操作命令"></a>Redis中key的操作命令</h2></li><li>查看当前数据库中key的数目：dbsize</li><li>查看当前数据库中有哪些key：keys *</li><li>清空当前/所有库：flushdb/flushall</li><li>获取redis的所有配置项：config get *</li><li>查找符合条件的key：key */wo?d/wo[or]d</li><li>判断key是否存在：exists key1 key2。存在返回1，不存在返回0，多个key返回存在的数量</li><li>移动key到指定的数据库，移动的key在原库中删除，移动成功返回1，失败为0：move key dbIndex</li><li>查看key的剩余生存时间，以秒为单位，返回-1为永不过期，-2为不存在：ttl key</li><li>设置key的生存时间，超过时间key自动删除，单位是秒，成功返回1，失败为0：expire key seconds</li><li>查看key所存储值的数据类型：type key</li><li>给key改名字，当key和newkey相同，或者newkey不存在时返回一个错误：rename key newkey</li><li>删除存在的key，不存在的将被忽略，返回删除key的数量：del key1 key2</li></ol><h2 id="Redis中五种数据类型结构"><a href="#Redis中五种数据类型结构" class="headerlink" title="Redis中五种数据类型结构"></a><em>Redis中五种数据类型结构</em></h2><h2 id="字符串类型：String"><a href="#字符串类型：String" class="headerlink" title="字符串类型：String"></a>字符串类型：String</h2><p><strong>简介</strong><br> 1.redis中最基本的数据结构，能存储任何类型的数据，甚至是图片，最大512M<br> 2.字符串类型的数据操作总的思想是通过key操作value，key是数据标识，value是我们感兴趣的业务数据</p><p><strong>常用操作命令</strong></p><ol><li>将字符串值 value 设置到 key 中，如果key已存在，后放的值会把前放的值覆盖掉：set key value</li><li>获取 key 中设置的字符串值,key存在，返回key对应的value；key不存在，返回nil:get key</li><li>如果 key 存在，则将 value 追加到 key 原来旧值的末尾, 如果 key 不存在，则将key 设置值为 value,返回值：追加字符串之后的总长度(字符个数):append key value</li><li>返回 key 所储存的字符串值的长度:strlen key</li><li>将 key 中储存的数字值加1，如果 key 不存在，则 key 的值先被初始化为 0 再执行incr操作:incr key</li><li>将 key 中储存的数字值减1，如果 key 不存在，则么 key 的值先被初始化为 0 再执行 decr 操作:decr key</li><li>将 key 所储存的值加上增量值，如果 key 不存在，则 key 的值先被初始化为 0 再执行 INCRBY 命令:incrby key offset</li><li>将 key 所储存的值减去减量值，如果 key 不存在，则 key 的值先被初始化为 0 再执行 DECRBY 命令:decrby key offset</li><li>获取 key 中字符串值从 startIndex 开始到 endIndex 结束的子字符串,包括startIndex和endIndex, 负数表示从字符串的末尾开始，-1 表示最后一个字符:getrange key startindex endindex</li><li>用value覆盖key的存储的值从offset开始,返回值为修改后的字符串的长度：setrange key offsetIndex value</li><li>设置key的值，并将 key 的生存时间设为 seconds (以秒为单位)  ，如果key已经存在，将覆盖旧值。返回值：设置成功，返回OK：setex key seconds value</li><li>setnx 是 set if not exists 的简写，如果key不存在，则 set 值，存在则不设置值。成功返回1：setnx key value</li><li>同时设置一个或多个 key-value 对：mset key1 value1 key2 value2</li><li>获取所有(一个或多个)给定 key 的值返回值：包含所有key的列表，如果key不存在，则返回nil：mget key1 key2</li><li>同时设置一个或多个 key-value 对，如果有一个key是存在的，则设置不成功：msetex key1 value1 key2 value2</li></ol><h2 id="列表：List"><a href="#列表：List" class="headerlink" title="列表：List"></a>列表：List</h2><p><strong>简介</strong></p><ol><li>Redis列表是简单的字符串列表，按照插入顺序排序，左边（头部）、右边（尾部）或者中间都可以添加元素。底层是个链表结构，链表的操作无论是头或者尾效率都极高，但是如果对中间元素进行操作，那效率会大大降低了。</li><li>列表类型的数据操作总的思想是通过key和下标操作value，key是数据标识，下标是数据在列表中的位置，value是我们感兴趣的业务数据</li></ol><p><strong>常用操作命令</strong></p><ol><li>将一个或多个值 value 插入到列表 key 的最左边（表头），各个value值依次插入到表头位置。返回值：插入之后的列表的长度:lpush key value1 value2[value…]</li><li>将一个或多个值 value 插入到列表 key 的最右边（表尾），各个 value 值按依次插入到表尾。返回值：插入之后的列表的长度:rpush key value[value…]</li><li>获取列表 key 中指定下标区间内的元素，下标从0开始，到列表长度-1；下标也可以是负数，表示列表从后往前取，-1表示倒数第一个元素，-2表示倒数第二个元素，以此类推；startIndex和endIndex超出范围不会报错。<br>返回值：获取到的元素列表:lrange key startIndex endIndex</li><li>移除并返回列表key头部第一个元素，即列表左侧的第一个元素。<br>返回值：列表左侧第一个元素的值；列表key不存在，返回nil:lpop key</li><li>移除并返回列表key尾部第一个元素，即列表右侧的第一个元素。<br>返回值：列表右侧第一个元素的值；列表key不存在，返回nil:rpop key</li><li>获取列表 key 中下标为指定 index 的元素，列表元素不删除，只是查询。0 表示列表的第一个元素，1 表示列表的第二个元素；index也可以负数的下标， -1 表示列表的最后一个元素， -2 表示列表的倒数第二个元素，以此类推:lindex key index</li><li>获取列表 key 的长度,返回值：数值，列表的长度；key不存在返回0:llen key</li><li>根据参数 count 的值，移除列表中与参数 value 相等的元素，count &gt;0 ，从列表的左侧向右开始移除；count &lt; 0 从列表的尾部开始移除；count = 0移除表中所有与 value 相等的值,返回值为移除元素的个数：lrem key count value</li><li>截取key的指定下标区间的元素，并且赋值给key。下标从0开始，一直到列表长度-1；下标也可以是负数，表示列表从后往前取，-1表示倒数第一个元素，-2表示倒数第二个元素，以此类推；startIndex和endIndex超出范围不会报错</li><li>将列表 key 下标为 index 的元素的值设置为 value。功能：设置成功返回ok ; key不存在或者index超出范围返回错误信息:lset key index value</li><li>将值 value 插入到列表 key 当中位于值 pivot 之前或之后的位置。key不存在或者pivot不在列表中，不执行任何操作。返回值：命令执行成功，返回新列表的长度。没有找到pivot返回 -1， key不存在返回0:linsert key before/after pivot value</li></ol><h2 id="集合类型：Set"><a href="#集合类型：Set" class="headerlink" title="集合类型：Set"></a>集合类型：Set</h2><p><strong>简介</strong></p><ol><li>Redis的Set是string类型的无序不重复集合</li><li>集合类型的数据操作总的思想是通过key确定集合，key是集合标识，元素没有下标，只有直接操作业务数据和数据的个数</li></ol><p><strong>常用操作命令</strong></p><ol><li>将一个或多个 member 元素加入到集合 key 当中，已经存在于集合的 member 元素将被忽略，不会再加入。返回值：加入到集合的新元素的个数(不包括被忽略的元素)：sadd key member[member…]</li><li>获取集合 key 中的所有成员元素，不存在的key视为空集合。返回值：返回指定集合的所有元素集合，不存在的key，返回空集合:smembers key</li><li>判断 member 元素是否是集合 key 的元素:sismember key member</li><li>获取集合里面的元素个数返回值：数字，key的元素个数。其他情况返回 0:scard key</li><li>移除集合中一个或多个元素，不存在的元素被忽略:srem key member [member…]</li><li>只提供key，随机返回集合中一个元素，元素不删除，依然在集合中；提供了count时，count 正数, 返回包含count个数元素的集合，集合元素各不重复。count是负数，返回一个count绝对值的长度的集合，集合中元素可能会重复多次:srandmember key[count]</li><li>随机从集合中删除一个或count个元素。返回值：被删除的元素，key不存在或空集合返回nil:spop key[count]</li><li>将 member 元素从src集合移动到dest集合，member不存在，smove不执行操作，返回0，如果dest存在member，则仅从src中删除member:smove src dest member</li><li>返回指定集合的差集，以第一个集合为准进行比较，即第一个集合中有但在其它任何集合中都没有的元素组成的集合。返回值：返回第一个集合中有而后边集合中都没有的元素组成的集合，如果第一个集合中的元素在后边集合中都有则返回空集合:sdiff key key [key…]</li><li>返回指定集合的交集，即指定的所有集合中都有的元素组成的集合。<br>返回值：交集元素组成的集合，如果没有则返回空集合:sinter key key [key…]</li><li>返回指定集合的并集，即指定的所有集合元素组成的大集合，如果元素有重复，则保留一个。返回值：返回所有集合元素组成的大集合，如果所有key都不存在，返回空集合:sunion key key [key…]</li></ol><h2 id="哈希类型：Hash"><a href="#哈希类型：Hash" class="headerlink" title="哈希类型：Hash"></a>哈希类型：Hash</h2><p><strong>简介</strong></p><ol><li>Redis的hash 是一个string类型的key和value的映射表，这里的value是一系列的键值对，hash特别适合用于存储对象</li><li>哈希类型的数据操作总的思想是通过key和field操作value，key是数据标识，field是域，value是我们感<br>兴趣的业务数据</li></ol><p><strong>常用命令</strong></p><ol><li>将键值对field-value设置到哈希列表key中，如果key不存在，则新建哈希列表，然后执行赋值，如果key下的field已经存在，则value值覆盖：hset  key  field  value  [field  value …]</li><li>获取哈希表 key 中给定域 field 的值：hget key field</li><li>同时将多个 field-value (域-值)设置到哈希表 key 中，此命令会覆盖已经存在的field，hash表key不存在，创建空的hash表，再执行hmset：hmset key  field value [field value…]</li><li>获取哈希表 key 中一个或多个给定域的值，返回值：返回和field顺序对应的值，如果field不存在，返回nil：hmget key field [field…]</li><li>获取哈希表 key 中所有的域和值，返回值：以列表形式返回hash中域和域的值，key不存在，返回空hash：hgetall key</li><li>删除哈希表 key 中的一个或多个指定域field，不存在field直接忽略：hdel key field [field…]</li><li>获取哈希表 key 中域field的个数：hlen key</li><li>查看哈希表 key 中，给定域 field 是否存在：hexists key field</li><li>查看哈希表 key 中的所有field域列表：hkeys key</li><li>返回哈希表 中所有域的值列表：hvals key </li><li>给哈希表key中的field域增加int，返回值：返回增加之后的field域的值：hincrby key field int</li><li>给哈希表key中的field域增加float：hincrbyfloat key field float</li><li>将哈希表 key 中的域 field 的值设置为 value ，当且仅当域 field 不存在的时候才设置，否则不设置：hsetnx key field value</li></ol><h2 id="有序集合：Zset"><a href="#有序集合：Zset" class="headerlink" title="有序集合：Zset"></a>有序集合：Zset</h2><p><strong>简介</strong></p><ol><li>Redis 有序集合zset和集合set一样也是string类型元素的集合，且不允许重复的成员</li><li>不同的是zset的每个元素都会关联一个分数（分数可以重复），redis通过分数来为集合中的成员进行从小到大的排序。</li></ol><p><strong>常用命令</strong></p><ol><li><p>将一个或多个 member 元素及其 score 值加入到有序集合 key 中，如果member存在集合中，则覆盖原来的值；score可以是整数或浮点数：zadd key score member [score member…]</p></li><li><p>查询有序集合，指定区间的内的元素。集合成员按score值从小到大来排序；startIndex和endIndex都是从0开始表示第一个元素，1表示第二个元素，以此类推； startIndex和endIndex都可以取负数，表示从后往前取，-1表示倒数第一个元素；WITHSCORES选项让score和value一同返回：zrange key startIndex endIndex [WITHSCORES]   </p></li><li><p>获取有序集 key 中，所有 score 值介于 min 和 max 之间（包括min和max）的成员，有序成员是按递增（从小到大）排序；<br>  使用符号”(“ 表示包括min但不包括max；<br>  withscores 显示score和 value；<br>  limit用来限制返回结果的数量和区间，在结果集中从第offset个开始，取count个<br>  语法：zrangebyscore key min max [WITHSCORES ] [LIMIT offset count]</p></li><li><p>删除有序集合 key 中的一个或多个成员，不存在的成员被忽略：zrem key member [member…]</p></li><li><p>获取有序集 key 的元素成员的个数：zcard key</p></li><li><p>返回有序集 key 中， score 值在 min 和 max 之间(包括 score 值等于 min 或 max )的成员的数量：zcount key min max</p></li><li><p>获取有序集 key 中成员 member 的排名，有序集成员按 score 值从小到大顺序排列，从0开始排名，score最小的是0 ：zrank key member</p></li><li><p>获取有序集合key中元素member的分数：zscore key member</p></li><li><p>获取有序集 key 中成员 member 的排名，有序集成员按 score 值从大到小顺序排列，从0开始排名，score最大的是0 ：zrevrank key member</p></li><li><p>查询有序集合，指定区间的内的元素。集合成员按score值从大到小来排序；startIndex和endIndex都是从0开始表示第一个元素，1表示第二个元素，以此类推；startIndex和endIndex都可以取负数，表示从后往前取，-1表示倒数第一个元素；WITHSCORES选项让score和value一同返回：zrevrange<br>key startIndex endIndex [WITHSCORES]</p></li><li><p>获取有序集 key 中，所有 score 值介于 max 和 min 之间（包括max和min）的成员，有序成员是按递减（从大到小）排序；<br> 使用符号”(“ 表示不包括min和max；<br> withscores 显示score和 value；<br> limit用来限制返回结果的数量和区间，在结果集中从第offset个开始，取count个<br> 语法：zrevrangebyscore key max min  [WITHSCORES ] [LIMIT offset count]</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> Redis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Redis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>break和return、continue的作用与区别</title>
      <link href="2021/04/20/break%E5%92%8Creturn%E3%80%81continue%E7%9A%84%E4%BD%9C%E7%94%A8%E4%B8%8E%E5%8C%BA%E5%88%AB/"/>
      <url>2021/04/20/break%E5%92%8Creturn%E3%80%81continue%E7%9A%84%E4%BD%9C%E7%94%A8%E4%B8%8E%E5%8C%BA%E5%88%AB/</url>
      
        <content type="html"><![CDATA[<ol><li>break是用来跳出循环的，但不跳出函数，当某循环中出现break，例如for，while，do-while都可以跳出，但不跳出函数并且该循环终止，开始执行循环之后的代码。通常break语句总是与if语句联在一起,即满足条件时便跳出循环</li><li>return语句是将函数的值返回主调函数，后面的不管是循环里面还是循环外面的都不执行。但是它并不是用于专门跳出循环，而是结束一个方法，当在循环体中遇到Return，Return就会结束该方法，则循环随之也就结束。</li><li>continue语句的作用是跳过循环本中剩余的语句而强行执行下一次循环，结束一个循环的本次循环，但继续执行该循环的下一次循环，与break的区别在于break将该循环完全终止。continue语句只用在for、while、do-while等循环体中,常与if条件语句一起使用,用来加速循环</li></ol>]]></content>
      
      
      <categories>
          
          <category> JavaSE </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> JavaSE </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
